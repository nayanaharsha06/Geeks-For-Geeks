//{ Driver Code Starts
import java.io.*;
import java.util.*;

class GFG {
    public static void main(String[] args) throws IOException {
        BufferedReader br =
            new BufferedReader(new InputStreamReader(System.in));
        int t;
        t = Integer.parseInt(br.readLine());
        while (t-- > 0) {

            int n;
            n = Integer.parseInt(br.readLine());

            Solution obj = new Solution();
            obj.print_divisors(n);
            System.out.println();
        }
    }
}

// } Driver Code Ends


class Solution {
    public static void print_divisors(int n) {
         List<Integer> divisors = new ArrayList<>();
        
        // Find divisors from 1 to sqrt(n)
        for (int i = 1; i <= Math.sqrt(n); i++) {
            if (n % i == 0) {
                divisors.add(i); // Add the divisor i
                if (i != n / i) { // Add the pair divisor if it's different
                    divisors.add(n / i);
                }
            }
        }
        
        // Sort divisors to print them in ascending order
        Collections.sort(divisors);
        
        // Print all divisors
        for (int divisor : divisors) {
            System.out.print(divisor + " ");
        }
        System.out.println(); // New line after printing all divisors
    }
        
    
}

// Both 6 and 36 / 6 (which is 6) are divisors. 
//Here, i and n / i are the same, so we add 6 only once.
