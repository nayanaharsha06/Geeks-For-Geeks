//{ Driver Code Starts
// Initial Template for Java

import java.util.*;
import java.lang.*;
import java.math.*;
import java.io.*;

class GFG {
    public static void main(String[] args) throws IOException {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while (t-- > 0) {
            String str1 = sc.next();
            String str2 = sc.next();

            Solution obj = new Solution();
            String ans = obj.betterString(str1, str2);
            System.out.println(ans);
        }
    }
}
// } Driver Code Ends




// User function Template for Java

class Solution {
    public static int distinctSubsequence(String s) {
        Map<Character, Integer> map = new HashMap<>();
        int[] dp = new int[s.length() + 1];
        
        dp[0] = 1;
        for(int i = 0; i < s.length(); i++) {
            if(!map.containsKey(s.charAt(i))) dp[i + 1] = dp[i] * 2;
            else {
                dp[i + 1] = dp[i] * 2 - dp[map.get(s.charAt(i))];
            }
            map.put(s.charAt(i),i);
        }
        return dp[s.length()];
    }
    public static String betterString(String str1, String str2) {
        int count1 = distinctSubsequence(str1);
        int count2 = distinctSubsequence(str2);
        
        if(count1 >= count2) return str1;
        return str2;
    }
}
