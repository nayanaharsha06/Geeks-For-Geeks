//{ Driver Code Starts
//Initial Template for Java

import java.io.*;
import java.util.*;
import java.lang.*;

class GFG{
    public static void main(String args[])throws IOException
    {
        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(in.readLine());
        while(t-- > 0){
            int n = Integer.parseInt(in.readLine());
            
            Solution ob = new Solution();
            ArrayList<Integer> ans = ob.recamanSequence(n);
            for(int i = 0;i < n;i++)
                System.out.print(ans.get(i)+" ");
            System.out.println();
        }
    }
}
// } Driver Code Ends


//User function Template for Java

class Solution{
    static ArrayList<Integer> recamanSequence(int n){
        ArrayList<Integer> sequence = new ArrayList<>();
        // Set to track the previously seen elements
        HashSet<Integer> seen = new HashSet<>();
        
        // The first term of the sequence
        sequence.add(0);
        seen.add(0);

        // Generate the sequence from a(1) to a(n-1)
        for (int i = 1; i < n; i++) {
            int previous = sequence.get(i - 1);
            int candidate = previous - i;

            // Apply the rule: if a(n-1) - n is positive and not already in the sequence
            if (candidate > 0 && !seen.contains(candidate)) {
                sequence.add(candidate);
            } else {
                sequence.add(previous + i);
            }

            // Add the new term to the set of seen values
            seen.add(sequence.get(i));
        }

        // Return the ArrayList containing the sequence
        return sequence;
    }
}
